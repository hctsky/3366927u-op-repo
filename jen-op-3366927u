pipeline {
      agent any
	  environment {
	      APP_NAME = "3366927u Jenkins Operate Pipeline"
	      APP_ENV  = "CDV1C04 CWF"
	  }

      stages {
          stage('Op-3366927u-S1') {
	          steps {
			  	cleanWs()

// remove qa svr container
				sh 'docker rm -f 3366927u-qa-svr || true'
// run another qa-svr from qa backup image
				sh 'docker run -d -p 33200:80 --network customnetwork -h 3366927u-qa-svr.localdomain --name 3366927u-qa-svr  --add-host=sddo-vm.localdomain:172.20.113.173 --ip=192.168.100.110 --mount source=qa-volume,target=/mnt/qa-volume qa-bkup-image /usr/sbin/sshd -D'  

// use bolt command to update the html in qa svr
				sh '''#!/bin/bash
				puppet resource file /tmp/clone ensure=absent force=true;
                puppet resource file /tmp/clone ensure=directory;
	   			cd /tmp/clone;
	   			git clone https://github.com/hctsky/3366927u-op-repo.git;
                targets=3366927u-qa-svr.localdomain;
                locate_script='/tmp/clone/3366927u-op-repo/3366927u_script';
                bolt script run $locate_script -u root -p user123 -t $targets --no-host-key-check --run-as root;
				'''

	            echo 'Op-3366927u-S1: QA web server is backup and updated'

	          }
          }
          stage('Op-3366927u-S2') {
	          steps {
				// curl test qa svr
				echo 'Op-3366927u-S2: Checking on whether QA server is running after update'				
				sh 'curl -Is http://localhost:33200|head -n 1 > /tmp/qa-result-file'
				sh 'cat /tmp/qa-result-file'
	            
	          }
          }
          stage('Op-3366927u-S3') {
	          steps {
				// proceed or rollback
				script {
			        /*activeChoiceParam(name: 'ACTION') {
			            description('Choose an action')
			            choiceType('RADIO')
			            groovyScript {
			                script = '''
			                    return ["Deploy to Production Environment", "Rollback"]
			                '''
			                fallbackScript = 'return ["Rollback"]'
			            }
					}
					v2 = ${params.ACTION} */
					
					v2 = input ( 
	                	message: 'ACTION',
	                    parameters: [choice(name:'', choices: ['Proceed to Roll out to Prod server', 'Roll back QA server'])]
						)
					
					// if proceed			
					if (v2 == 'Proceed to Roll out to Prod server'){
	 					echo 'Op-3366927u-S3: Proceed to roll out to Prod server'
						}
					else if (v2 == 'Roll back QA server') {
						// if rollback, then
						// execute rollback of qa web svr by using qa-bkup-image
						// remove qa svr container
						sh 'rm /var/www/html/index.html'
						sh 'docker rm -f 3366927u-qa-svr || true'
						// run another qa-svr from qa backup image
						sh 'docker run -d -p 33200:80 --network customnetwork -h 3366927u-qa-svr.localdomain --name 3366927u-qa-svr  --add-host=sddo-vm.localdomain:172.20.113.173 --ip=192.168.100.110 --mount source=qa-volume,target=/mnt/qa-volume qa-bkup-image /usr/sbin/sshd -D'  
						
		//sh 'docker run --rm -v qa-volume:/var/www/html alpine sh -c "rm -f /var/www/html/index.html" '
		//sh 'docker restart 3366927u-qa-svr'

echo 'Op-3366927u-S3: QA server fails after update and is rolled back'
						// then use error('aborting') to abort rest of steps
						
		                error('aborting')
	
						}
				}


        			

	          }
          }
          stage('Op-3366927u-S4') {
	          steps {

// remove prod svr container
// run another prod-svr from qa backup image
// use bolt command to update the html in prod svr
	            	//'''input('Do you want to deploy to Production container?')
	                echo 'Op-3366927u-S4: prod web server is backup and updated'
	          }
          }
          stage('Op-3366927u-S5') {
	          steps {
	                 /*
					 ''' sh '''#!/bin/bash
	                 ''' targets=puppetclient2.localdomain;
	                 ''' locate_script='/tmp/clone/cdv1c04-devops_repo/script_to_run';
	                 ''' bolt script run $locate_script -t $targets -u clientadm -p user123 --no-host-key-check --run-as root;
	                 '''
					 */
// curl test prod svr
	                 echo "Production container updated"
	                 echo 'Op-3366927u-S5: Checking on whether Prod server is running after update'
	          }
          }
          stage('Op-3366927u-S6') {
	          steps {
// proceed or rollback

// if proceed
				echo 'Proceed to release Prod web server to production'
// if rollback
// execute rollback of prod web svr by using prod-bkup-image
// then use error('aborting') to abort rest of steps
	            echo 'Op-3366927u-S6: Prod web server is rolled back'
	          }
          }
          stage('Op-3366927u-S7') {
	          steps {
	            echo 'Completed updating to Production Container'
	            echo 'Op-3366927u-S7: Prod web server is monitored and ready to serve'
	          }
          }
	}
}
