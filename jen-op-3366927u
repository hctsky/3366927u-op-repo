pipeline {
      agent any
	  environment {
	      APP_NAME = "3366927u Jenkins Operate Pipeline"
	      APP_ENV  = "CDV1C04 CWF"
	  }

      stages {
          stage('Op-3366927u-S1') {
	          steps {
			  	cleanWs()

// remove qa svr container
				sh 'docker rm -f 3366927u-qa-svr || true'
// run another qa-svr from qa backup image
				sh 'docker run -d -p 33200:80 --network customnetwork -h 3366927u-qa-svr.localdomain --name 3366927u-qa-svr  --add-host=sddo-vm.localdomain:172.20.113.173 --ip=192.168.100.110 --mount source=qa-volume,target=/mnt/qa-volume qa-bkup-image /sbin/init'  

// use bolt command to update the html in qa svr
				sh '''#!/bin/bash
				puppet resource file /tmp/clone ensure=absent force=true;
                puppet resource file /tmp/clone ensure=directory;
	   			cd /tmp/clone;
	   			git clone https://github.com/hctsky/3366927u-op-repo.git;
                targets=3366927u-qa-svr.localdomain;
                locate_script='/tmp/clone/3366927u-op-repo/script_to_run';
                bolt script run $locate_script -t $targets -u clientadm -p user123 --no-host-key-check --run-as root;



	            echo 'Op-3366927u-S1: QA web server is backup and updated'

	          }
          }
          stage('Op-3366927u-S2') {
	          steps {
	            //'''input('Do you want to update to UAT container?')
// curl test qa svr
	            echo 'Op-3366927u-S2: Checking on whether QA server is running after update'
	          }
          }
          stage('Op-3366927u-S3') {
	          steps {
	                 /*
					 ''' sh '''#!/bin/bash
	                 ''' puppet resource file /tmp/clone ensure=absent force=true;
	                 ''' puppet resource file /tmp/clone ensure=directory;
		             ''' cd /tmp/clone;
		             ''' git clone https://github.com/hctsky/cdv1c04-devops_repo.git;
	                 ''' targets=puppetclient1.localdomain;
	                 ''' locate_script='/tmp/clone/cdv1c04-devops_repo/script_to_run';
	                 ''' bolt script run $locate_script -t $targets -u clientadm -p user123 --no-host-key-check --run-as root;
	                 '''
		    	     */

// proceed or rollback


// if proceed
        			 echo 'Op-3366927u-S3: Proceed to roll out to Prod server'
// if rollback, then
// execute rollback of qa web svr by using qa-bkup-image
// then use error('aborting') to abort rest of steps
	                 echo 'Op-3366927u-S3: QA server fails after update and is rolled back'
	          }
          }
          stage('Op-3366927u-S4') {
	          steps {

// remove prod svr container
// run another prod-svr from qa backup image
// use bolt command to update the html in prod svr
	            	//'''input('Do you want to deploy to Production container?')
	                echo 'Op-3366927u-S4: prod web server is backup and updated'
	          }
          }
          stage('Op-3366927u-S5') {
	          steps {
	                 /*
					 ''' sh '''#!/bin/bash
	                 ''' targets=puppetclient2.localdomain;
	                 ''' locate_script='/tmp/clone/cdv1c04-devops_repo/script_to_run';
	                 ''' bolt script run $locate_script -t $targets -u clientadm -p user123 --no-host-key-check --run-as root;
	                 '''
					 */
// curl test prod svr
	                 echo "Production container updated"
	                 echo 'Op-3366927u-S5: Checking on whether Prod server is running after update'
	          }
          }
          stage('Op-3366927u-S6') {
	          steps {
// proceed or rollback

// if proceed
				echo 'Proceed to release Prod web server to production'
// if rollback
// execute rollback of prod web svr by using prod-bkup-image
// then use error('aborting') to abort rest of steps
	            echo 'Op-3366927u-S6: Prod web server is rolled back'
	          }
          }
          stage('Op-3366927u-S7') {
	          steps {
	            echo 'Completed updating to Production Container'
	            echo 'Op-3366927u-S7: Prod web server is monitored and ready to serve'
	          }
          }
	}
}
